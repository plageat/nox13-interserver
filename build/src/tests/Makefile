# Makefile.in generated by automake 1.11.3 from Makefile.am.
# src/tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- makefile -*-
VPATH = ../../../src/tests
pkgdatadir = $(datadir)/nox
pkgincludedir = $(includedir)/nox
pkglibexecdir = $(libexecdir)/nox
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
DIST_COMMON = $(srcdir)/../Make.vars $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
#am__append_1 = -g -DNDEBUG
#am__append_2 = -DPROFILING
am__append_3 = -D_GLIBCXX_CONCEPT_CHECKS=1 \
	-D_GLIBCXX_DEBUG=1 -D_GLIBCXX_DEBUG_PEDANTIC=1
am__append_4 = -export-dynamic
#am__append_5 = -I $(INCLUDEPY)
TESTS = test-classifier.sh test-coop-preblock-hook.sh \
	test-coop-sema.sh test-coop-signals.sh \
	test-ethernetaddr$(EXEEXT) test-event-dispatcher-blocking.sh \
	test-event-dispatcher-starvation.sh test-poll-loop-removal.sh \
	test-timer-dispatcher-delay.sh \
	test-timer-dispatcher-duplicates.sh \
	test-timer-dispatcher-starvation.sh test-timeval.sh \
	test-type-props.sh
check_PROGRAMS = test-classifier$(EXEEXT) \
	test-coop-preblock-hook$(EXEEXT) test-coop-sema$(EXEEXT) \
	test-coop-signals$(EXEEXT) test-ethernetaddr$(EXEEXT) \
	test-event-dispatcher-blocking$(EXEEXT) \
	test-event-dispatcher-starvation$(EXEEXT) \
	test-poll-loop-removal$(EXEEXT) \
	test-timer-dispatcher-delay$(EXEEXT) \
	test-timer-dispatcher-duplicates$(EXEEXT) \
	test-timer-dispatcher-starvation$(EXEEXT) \
	test-timeval$(EXEEXT) test-type-props$(EXEEXT)
subdir = src/tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am_test_classifier_OBJECTS = test-classifier.$(OBJEXT)
test_classifier_OBJECTS = $(am_test_classifier_OBJECTS)
test_classifier_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
test_classifier_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_coop_preblock_hook_OBJECTS =  \
	test-coop-preblock-hook.$(OBJEXT)
test_coop_preblock_hook_OBJECTS =  \
	$(am_test_coop_preblock_hook_OBJECTS)
test_coop_preblock_hook_LDADD = $(LDADD)
test_coop_preblock_hook_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_coop_sema_OBJECTS = test-coop-sema.$(OBJEXT)
test_coop_sema_OBJECTS = $(am_test_coop_sema_OBJECTS)
test_coop_sema_LDADD = $(LDADD)
test_coop_sema_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_coop_signals_OBJECTS = test-coop-signals.$(OBJEXT)
test_coop_signals_OBJECTS = $(am_test_coop_signals_OBJECTS)
test_coop_signals_LDADD = $(LDADD)
test_coop_signals_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_ethernetaddr_OBJECTS = test-ethernetaddr.$(OBJEXT)
test_ethernetaddr_OBJECTS = $(am_test_ethernetaddr_OBJECTS)
test_ethernetaddr_LDADD = $(LDADD)
test_ethernetaddr_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_event_dispatcher_blocking_OBJECTS =  \
	test-event-dispatcher-blocking.$(OBJEXT)
test_event_dispatcher_blocking_OBJECTS =  \
	$(am_test_event_dispatcher_blocking_OBJECTS)
test_event_dispatcher_blocking_LDADD = $(LDADD)
test_event_dispatcher_blocking_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_event_dispatcher_starvation_OBJECTS =  \
	test-event-dispatcher-starvation.$(OBJEXT)
test_event_dispatcher_starvation_OBJECTS =  \
	$(am_test_event_dispatcher_starvation_OBJECTS)
test_event_dispatcher_starvation_LDADD = $(LDADD)
test_event_dispatcher_starvation_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_poll_loop_removal_OBJECTS = test-poll-loop-removal.$(OBJEXT)
test_poll_loop_removal_OBJECTS = $(am_test_poll_loop_removal_OBJECTS)
test_poll_loop_removal_LDADD = $(LDADD)
test_poll_loop_removal_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_timer_dispatcher_delay_OBJECTS =  \
	test-timer-dispatcher-delay.$(OBJEXT)
test_timer_dispatcher_delay_OBJECTS =  \
	$(am_test_timer_dispatcher_delay_OBJECTS)
test_timer_dispatcher_delay_LDADD = $(LDADD)
test_timer_dispatcher_delay_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_timer_dispatcher_duplicates_OBJECTS =  \
	test-timer-dispatcher-duplicates.$(OBJEXT)
test_timer_dispatcher_duplicates_OBJECTS =  \
	$(am_test_timer_dispatcher_duplicates_OBJECTS)
test_timer_dispatcher_duplicates_LDADD = $(LDADD)
test_timer_dispatcher_duplicates_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_timer_dispatcher_starvation_OBJECTS =  \
	test-timer-dispatcher-starvation.$(OBJEXT)
test_timer_dispatcher_starvation_OBJECTS =  \
	$(am_test_timer_dispatcher_starvation_OBJECTS)
test_timer_dispatcher_starvation_LDADD = $(LDADD)
test_timer_dispatcher_starvation_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_timeval_OBJECTS = test-timeval.$(OBJEXT) timeval.$(OBJEXT)
test_timeval_OBJECTS = $(am_test_timeval_OBJECTS)
test_timeval_LDADD = $(LDADD)
test_timeval_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
am_test_type_props_OBJECTS = test-type-props.$(OBJEXT)
test_type_props_OBJECTS = $(am_test_type_props_OBJECTS)
test_type_props_LDADD = $(LDADD)
test_type_props_DEPENDENCIES = ../lib/libnoxcore.la \
	../builtin/.libs/libbuiltin.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	../components.xsd.o ../nox.xsd.o
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(test_classifier_SOURCES) \
	$(test_coop_preblock_hook_SOURCES) $(test_coop_sema_SOURCES) \
	$(test_coop_signals_SOURCES) $(test_ethernetaddr_SOURCES) \
	$(test_event_dispatcher_blocking_SOURCES) \
	$(test_event_dispatcher_starvation_SOURCES) \
	$(test_poll_loop_removal_SOURCES) \
	$(test_timer_dispatcher_delay_SOURCES) \
	$(test_timer_dispatcher_duplicates_SOURCES) \
	$(test_timer_dispatcher_starvation_SOURCES) \
	$(test_timeval_SOURCES) $(test_type_props_SOURCES)
DIST_SOURCES = $(test_classifier_SOURCES) \
	$(test_coop_preblock_hook_SOURCES) $(test_coop_sema_SOURCES) \
	$(test_coop_signals_SOURCES) $(test_ethernetaddr_SOURCES) \
	$(test_event_dispatcher_blocking_SOURCES) \
	$(test_event_dispatcher_starvation_SOURCES) \
	$(test_poll_loop_removal_SOURCES) \
	$(test_timer_dispatcher_delay_SOURCES) \
	$(test_timer_dispatcher_duplicates_SOURCES) \
	$(test_timer_dispatcher_starvation_SOURCES) \
	$(test_timeval_SOURCES) $(test_type_props_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

# NOX install rules
pkglibdir = $(subst src,$(bindir),$(subdir))
ACLOCAL = ${SHELL} /home/openflow/nox13oflib/config/missing --run aclocal-1.11
ACTIVE_PACKAGES =   coreapps  netapps
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/openflow/nox13oflib/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/openflow/nox13oflib/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/openflow/nox13oflib/config/missing --run automake-1.11
AWK = mawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_FILESYSTEM_LIB = -lboost_filesystem-mt
BOOST_LDFLAGS = -L/usr/lib
BOOST_SYSTEM_LIB = -lboost_system-mt
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework-mt
BUILDNR = 0
BUILDNR_SUFFIX = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/openflow/nox13oflib/config/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MODULES_coreapps = testharness hub switch messenger interserver #add coreapps component here 
MODULES_netapps = discovery #add netapps component here 
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENFLOW_CPPFLAGS = -I${top_srcdir}/src/include/openflow
OPENSSL_PROG = yes
OTOOL = 
OTOOL64 = 
PACKAGE = nox
PACKAGE_BUGREPORT = contact@noxrepo.org
PACKAGE_NAME = nox
PACKAGE_STRING = nox 0.9.0(zaku)~full~beta
PACKAGE_TARNAME = nox
PACKAGE_URL = 
PACKAGE_VERSION = 0.9.0(zaku)~full~beta
PATH_SEPARATOR = :
PCAP_LDFLAGS = -lpcap
PYTHON = 
PYTHON_CPPFLAGS = 
PYTHON_EXTRA_LDFLAGS = 
PYTHON_EXTRA_LIBS = 
PYTHON_LDFLAGS = 
PYTHON_SITE_PKG = 
PYTHON_VERSION = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SPHINX_BUILD = 
SSL_LIBS = -lssl -lcrypto
STRIP = strip
VERSION = 0.9.0(zaku)~full~beta
VMDIR = 
abs_builddir = /home/openflow/nox13oflib/build/src/tests
abs_srcdir = /home/openflow/nox13oflib/build/../src/tests
abs_top_builddir = /home/openflow/nox13oflib/build
abs_top_srcdir = /home/openflow/nox13oflib/build/..
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/openflow/nox13oflib/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = ../../../src/tests
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../../..

# Include paths.

# GNU C library definitions.

# GNU C++ library definitions.
AM_CPPFLAGS = -DPKGDATADIR=\"$(pkgdatadir)\" \
	-DPKGLIBDIR=\"$(pkglibdir)\" \
	-DPKGLOCALSTATEDIR=\"$(pkglocalstatedir)\" \
	-DPKGSYSCONFDIR=\"$(pkgsysconfdir)\" -include \
	$(top_builddir)/config.h -I $(top_srcdir)/src/include \
	$(OPENFLOW_CPPFLAGS) $(BOOST_CPPFLAGS) -D_GNU_SOURCE=1 \
	$(am__append_1) $(am__append_2) -D_REENTRANT \
	-D__STDC_LIMIT_MACROS=1 -D__STDC_FORMAT_MACROS=1 \
	-D__STDC_CONSTANT_MACROS=1 $(am__append_3) $(am__append_5)
pkglocalstatedir = $(localstatedir)/$(PACKAGE)
pkgsysconfdir = $(sysconfdir)/$(PACKAGE)

# Always enable frame pointers.  The benefits for debugging outweigh
# the costs.  (On x86-64 frame pointers are disabled by default, so
# we need this option.)
COMMON_FLAGS = -fno-omit-frame-pointer -fno-strict-aliasing -Wall \
	-Wno-sign-compare -Winit-self -Wformat-nonliteral \
	-Wformat-security
AM_CXXFLAGS = $(COMMON_FLAGS)
AM_CFLAGS = $(COMMON_FLAGS) -Wstrict-prototypes -Wmissing-prototypes
LDADD = ../lib/libnoxcore.la ../builtin/.libs/libbuiltin.la \
	$(BOOST_LDFLAGS) $(BOOST_SYSTEM_LIB) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(BOOST_FILESYSTEM_LIB) \
	$(SSL_LIBS) ../components.xsd.o ../nox.xsd.o
AM_LDFLAGS = -R$(pkglibdir) $(am__append_4)
WWW_BUILD_SUBDIR = $(top_builddir)/src/nox/webapps/webserver/www
nox_installsubdir = $(DESTDIR)$(subst src,$(bindir),$(subdir))
nox_installwwwdir = $(DESTDIR)$(bindir)/nox/webapps/webserver/www
EXTRA_DIST = \
	test-classifier.sh			\
	test-coop-preblock-hook.sh		\
	test-coop-sema.sh			\
	test-coop-signals.sh			\
	test-event-dispatcher-blocking.sh	\
	test-event-dispatcher-starvation.sh	\
	test-poll-loop-removal.sh		\
	test-timer-dispatcher-delay.sh		\
	test-timer-dispatcher-duplicates.sh	\
	test-timer-dispatcher-starvation.sh	\
	test-timeval.sh				\
	test-type-props.sh

test_classifier_SOURCES = test-classifier.cc test-classifier.hh
test_coop_preblock_hook_SOURCES = test-coop-preblock-hook.cc
test_coop_sema_SOURCES = test-coop-sema.cc
test_coop_signals_SOURCES = test-coop-signals.cc
test_ethernetaddr_SOURCES = test-ethernetaddr.cc
test_event_dispatcher_blocking_SOURCES = test-event-dispatcher-blocking.cc
test_event_dispatcher_starvation_SOURCES = test-event-dispatcher-starvation.cc
test_poll_loop_removal_SOURCES = test-poll-loop-removal.cc
test_timer_dispatcher_delay_SOURCES = test-timer-dispatcher-delay.cc
test_timer_dispatcher_duplicates_SOURCES = test-timer-dispatcher-duplicates.cc
test_timer_dispatcher_starvation_SOURCES = test-timer-dispatcher-starvation.cc
test_timeval_SOURCES = test-timeval.cc ../lib/timeval.cc
test_type_props_SOURCES = test-type-props.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../Make.vars $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../Make.vars:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
test-classifier$(EXEEXT): $(test_classifier_OBJECTS) $(test_classifier_DEPENDENCIES) $(EXTRA_test_classifier_DEPENDENCIES) 
	@rm -f test-classifier$(EXEEXT)
	$(CXXLINK) $(test_classifier_OBJECTS) $(test_classifier_LDADD) $(LIBS)
test-coop-preblock-hook$(EXEEXT): $(test_coop_preblock_hook_OBJECTS) $(test_coop_preblock_hook_DEPENDENCIES) $(EXTRA_test_coop_preblock_hook_DEPENDENCIES) 
	@rm -f test-coop-preblock-hook$(EXEEXT)
	$(CXXLINK) $(test_coop_preblock_hook_OBJECTS) $(test_coop_preblock_hook_LDADD) $(LIBS)
test-coop-sema$(EXEEXT): $(test_coop_sema_OBJECTS) $(test_coop_sema_DEPENDENCIES) $(EXTRA_test_coop_sema_DEPENDENCIES) 
	@rm -f test-coop-sema$(EXEEXT)
	$(CXXLINK) $(test_coop_sema_OBJECTS) $(test_coop_sema_LDADD) $(LIBS)
test-coop-signals$(EXEEXT): $(test_coop_signals_OBJECTS) $(test_coop_signals_DEPENDENCIES) $(EXTRA_test_coop_signals_DEPENDENCIES) 
	@rm -f test-coop-signals$(EXEEXT)
	$(CXXLINK) $(test_coop_signals_OBJECTS) $(test_coop_signals_LDADD) $(LIBS)
test-ethernetaddr$(EXEEXT): $(test_ethernetaddr_OBJECTS) $(test_ethernetaddr_DEPENDENCIES) $(EXTRA_test_ethernetaddr_DEPENDENCIES) 
	@rm -f test-ethernetaddr$(EXEEXT)
	$(CXXLINK) $(test_ethernetaddr_OBJECTS) $(test_ethernetaddr_LDADD) $(LIBS)
test-event-dispatcher-blocking$(EXEEXT): $(test_event_dispatcher_blocking_OBJECTS) $(test_event_dispatcher_blocking_DEPENDENCIES) $(EXTRA_test_event_dispatcher_blocking_DEPENDENCIES) 
	@rm -f test-event-dispatcher-blocking$(EXEEXT)
	$(CXXLINK) $(test_event_dispatcher_blocking_OBJECTS) $(test_event_dispatcher_blocking_LDADD) $(LIBS)
test-event-dispatcher-starvation$(EXEEXT): $(test_event_dispatcher_starvation_OBJECTS) $(test_event_dispatcher_starvation_DEPENDENCIES) $(EXTRA_test_event_dispatcher_starvation_DEPENDENCIES) 
	@rm -f test-event-dispatcher-starvation$(EXEEXT)
	$(CXXLINK) $(test_event_dispatcher_starvation_OBJECTS) $(test_event_dispatcher_starvation_LDADD) $(LIBS)
test-poll-loop-removal$(EXEEXT): $(test_poll_loop_removal_OBJECTS) $(test_poll_loop_removal_DEPENDENCIES) $(EXTRA_test_poll_loop_removal_DEPENDENCIES) 
	@rm -f test-poll-loop-removal$(EXEEXT)
	$(CXXLINK) $(test_poll_loop_removal_OBJECTS) $(test_poll_loop_removal_LDADD) $(LIBS)
test-timer-dispatcher-delay$(EXEEXT): $(test_timer_dispatcher_delay_OBJECTS) $(test_timer_dispatcher_delay_DEPENDENCIES) $(EXTRA_test_timer_dispatcher_delay_DEPENDENCIES) 
	@rm -f test-timer-dispatcher-delay$(EXEEXT)
	$(CXXLINK) $(test_timer_dispatcher_delay_OBJECTS) $(test_timer_dispatcher_delay_LDADD) $(LIBS)
test-timer-dispatcher-duplicates$(EXEEXT): $(test_timer_dispatcher_duplicates_OBJECTS) $(test_timer_dispatcher_duplicates_DEPENDENCIES) $(EXTRA_test_timer_dispatcher_duplicates_DEPENDENCIES) 
	@rm -f test-timer-dispatcher-duplicates$(EXEEXT)
	$(CXXLINK) $(test_timer_dispatcher_duplicates_OBJECTS) $(test_timer_dispatcher_duplicates_LDADD) $(LIBS)
test-timer-dispatcher-starvation$(EXEEXT): $(test_timer_dispatcher_starvation_OBJECTS) $(test_timer_dispatcher_starvation_DEPENDENCIES) $(EXTRA_test_timer_dispatcher_starvation_DEPENDENCIES) 
	@rm -f test-timer-dispatcher-starvation$(EXEEXT)
	$(CXXLINK) $(test_timer_dispatcher_starvation_OBJECTS) $(test_timer_dispatcher_starvation_LDADD) $(LIBS)
test-timeval$(EXEEXT): $(test_timeval_OBJECTS) $(test_timeval_DEPENDENCIES) $(EXTRA_test_timeval_DEPENDENCIES) 
	@rm -f test-timeval$(EXEEXT)
	$(CXXLINK) $(test_timeval_OBJECTS) $(test_timeval_LDADD) $(LIBS)
test-type-props$(EXEEXT): $(test_type_props_OBJECTS) $(test_type_props_DEPENDENCIES) $(EXTRA_test_type_props_DEPENDENCIES) 
	@rm -f test-type-props$(EXEEXT)
	$(LINK) $(test_type_props_OBJECTS) $(test_type_props_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/test-classifier.Po
include ./$(DEPDIR)/test-coop-preblock-hook.Po
include ./$(DEPDIR)/test-coop-sema.Po
include ./$(DEPDIR)/test-coop-signals.Po
include ./$(DEPDIR)/test-ethernetaddr.Po
include ./$(DEPDIR)/test-event-dispatcher-blocking.Po
include ./$(DEPDIR)/test-event-dispatcher-starvation.Po
include ./$(DEPDIR)/test-poll-loop-removal.Po
include ./$(DEPDIR)/test-timer-dispatcher-delay.Po
include ./$(DEPDIR)/test-timer-dispatcher-duplicates.Po
include ./$(DEPDIR)/test-timer-dispatcher-starvation.Po
include ./$(DEPDIR)/test-timeval.Po
include ./$(DEPDIR)/test-type-props.Po
include ./$(DEPDIR)/timeval.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

timeval.o: ../lib/timeval.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timeval.o -MD -MP -MF $(DEPDIR)/timeval.Tpo -c -o timeval.o `test -f '../lib/timeval.cc' || echo '$(srcdir)/'`../lib/timeval.cc
	$(am__mv) $(DEPDIR)/timeval.Tpo $(DEPDIR)/timeval.Po
#	source='../lib/timeval.cc' object='timeval.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timeval.o `test -f '../lib/timeval.cc' || echo '$(srcdir)/'`../lib/timeval.cc

timeval.obj: ../lib/timeval.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT timeval.obj -MD -MP -MF $(DEPDIR)/timeval.Tpo -c -o timeval.obj `if test -f '../lib/timeval.cc'; then $(CYGPATH_W) '../lib/timeval.cc'; else $(CYGPATH_W) '$(srcdir)/../lib/timeval.cc'; fi`
	$(am__mv) $(DEPDIR)/timeval.Tpo $(DEPDIR)/timeval.Po
#	source='../lib/timeval.cc' object='timeval.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o timeval.obj `if test -f '../lib/timeval.cc'; then $(CYGPATH_W) '../lib/timeval.cc'; else $(CYGPATH_W) '$(srcdir)/../lib/timeval.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


# Runtime-files build and clean rules
nox-runtimefiles-build:
	@dlist="$(NOX_RUNTIMEFILES)";for f in $$dlist; do \
		if test -f ${srcdir}/$$f && test ! -f ${builddir}/$$f; then \
			echo "Soft-linking file: $(builddir)/$$f";\
			ln -sf $(srcdir)/$$f $(builddir)/$$f;\
		fi;\
	done;

nox-runtimefiles-clean:
	@dlist="$(NOX_RUNTIMEFILES)";for f in $$dlist; do \
		if test ! -f $(builddir)/$$f; then \
			echo "Removing soft-link: $(builddir)/$$f";\
			rm -f $(builddir)/$$f;\
		fi;\
	done;
	rm -f *.pyc

# Mako template build and clean rules
mako-template-build:
	@if test -d $(srcdir)/templates; then\
		if test ! -d $(builddir)/templates; then\
			echo "Soft-linking mako templates in: $(builddir)/templates";\
			ln -snf $(srcdir)/templates $(builddir)/templates;\
		fi;\
		if test ! -d $(builddir)/mako_modules; then\
			echo "Creating mako modules directory: $(builddir)/mako_modules";\
			mkdir -p $(builddir)/mako_modules;\
		fi;\
	else\
		echo "The target mako-template-build is a dependency in the";\
		echo "Makefile but there is no 'templates' subdirectory.";\
		false;\
	fi;

mako-template-clean:
	rm -rf $(builddir)/mako_modules
	@if test -L $(builddir)/templates; then\
		echo "Removing soft-link: $(builddir)/templates";\
		rm -f $(builddir)/templates;\
	fi

# Base www build rule.
#
# NOTE: this is for including things into the base level of the
# webroot directory tree.  It is not intended for constructing general
# subtrees within that directory hierarchy.  It should be used
# infrequently.  The static-www-build rule, which includes things in a
# component-specific subdirectory is much more appropriate in most
# circumstances.
base-www-build:
	mkdir -p "$(WWW_BUILD_SUBDIR)/.files"
	if test -z "$(BASE_WWW_FILES)"; then \
		if test -d "base_www"; then \
			fn=`find base_www -printf "%P\n"`; \
		else \
			fn=""; \
		fi; \
	else \
	    fn="$(BASE_WWW_FILES)"; \
	fi; \
	for f in $$fn; do \
		echo "Soft-linking from base_www: $$f";\
		ln -snf ../../$(top_srcdir)/src/$(MODULE_BASE_PATH)/$(MODULE)/base_www/$$f $(WWW_BUILD_SUBDIR)/.files;\
	done;

base-www-clean:     # Intentionally doesn't do anything

# Static www build and clean rules
static-www-build:
	@if test -d $(srcdir)/static_www; then\
		if test ! -d $(WWW_BUILD_SUBDIR)/$(MODULE_BASE_PATH); then\
			echo "Creating module www directory: $(WWW_BUILD_SUBDIR)/$(MODULE_BASE_PATH)";\
			mkdir -p $(WWW_BUILD_SUBDIR)/.files/$(MODULE_BASE_PATH);\
		fi;\
		echo "Soft-linking 'static_www' directory: $(WWW_BUILD_SUBDIR)/$(MODULE_BASE_PATH)/$(MODULE)";\
		ln -snf ../$(MODULE_BASE_ESCAPE)/../$(top_srcdir)/src/$(MODULE_BASE_PATH)/$(MODULE)/static_www $(WWW_BUILD_SUBDIR)/.files/$(MODULE_BASE_PATH)/$(MODULE);\
	else\
		echo "The target static-www-build is a dependency in the";\
		echo "Makefile but there is no 'static_www' subdirectory here.";\
		false;\
	fi;

static-www-clean:     # Intentionally doesn't do anything

# NOX rules for setting up links in remote build tree 
nox-all-local:
	@dlist="$(NOX_RUNTIMEFILES)";for f in $$dlist; do \
	  if test -f $(srcdir)/$$f && test ! -f $$f; then \
		ln -sf $(srcdir)/$$f $(builddir)/$$f;\
	  fi;\
	done;
	@dlist="$(NOX_PYLIBFILES)";for f in $$dlist; do \
	  if test ! -f $$f; then \
		ln -sf $(builddir)/.libs/$$f $(builddir)/$$f;\
	  fi;\
	done;

# NOX clean rules 
nox-clean-local:
	@find . -maxdepth 1 -name "*.py" -type l -exec rm -rf {} \;
	@rm -f *_wrap.cc *.pyc *.la *.so *.o
	@rm -rf __nox_tests
	@dlist="$(NOX_PYBUILDFILES)";for f in $$dlist; do \
      if test -f $(builddir)/$$f; then \
        rm -f $(builddir)/$$f;\
      fi;\
    done;

nox-install-local:
	@if test -d $(srcdir)/templates; then\
		cp -rf -L $(srcdir)/templates $(nox_installsubdir)/templates;\
		if test ! -d $(nox_installsubdir)/mako_modules; then\
			mkdir -p $(builddir)/mako_modules;\
		fi;\
	fi;

test:
	@$(PYTHON) $(top_builddir)/src/nox/coreapps/testharness/testharness.py $(TEST_FLAGS) -b $(top_builddir) ./

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
